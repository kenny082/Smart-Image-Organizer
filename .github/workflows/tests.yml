name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SIO_DISABLE_AI: '1'
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .

    - name: Run tests with pytest
      run: |
        pytest tests -v --cov=src --cov-report=term-missing --cov-report=html

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: htmlcov/

    - name: Check for changes
      id: check-changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "has-changes=false" >> $GITHUB_OUTPUT
          echo "No changes to commit"
        else
          echo "has-changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
        fi

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SIO_DISABLE_AI: '1'
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .

    - name: Run tests with pytest
      run: |
        pytest tests -v --cov=src --cov-report=term-missing --cov-report=html

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: htmlcov/

    - name: Check for changes
      id: check-changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "has-changes=false" >> $GITHUB_OUTPUT
          echo "No changes to commit"
        else
          echo "has-changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
        fi

    - name: Commit and push changes
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.check-changes.outputs.has-changes == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Format code with black and isort"
        commit_user_name: "github-actions[bot]"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"
        commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
        git_push_token: ${{ secrets.GITHUB_TOKEN }}
